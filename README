Raspberry Pi Baremetal Micropython

A messy start to adding Micropython to the Raspberry Pi SDL project.

Included is a version of SDL & Xcode project for testing on Mac. Later, a PC version should be pretty easy to set up too.

Micropython directly access the REPL for the interpreter whereas it ought to use something like 'readline'.

This only works on Version 1 Raspberry Pis and Pi Zeros.

It doesn't work with every USB keyboard either.

   micropython - SDL-based micropython image


----





Raspberry Pi Baremetal

This a code repository for bare-metal Raspberry Pi libraries and applications
ports.

   kernel     - Core startup and kernel code, with USB support
                provided by USPi library

   libpng     - PNG image file format library
   libogg     - OGG file format library
   libvorbis  - OGG Vorbis audio decode library
   SDL2       - Simple Directmedia Library
   SDL2_image - Image decoding support library for SDL2
   SDL2_mixer - Audio mixer support library for SDL2
   zlib       - Z compression library

   abbaye       - Abbaye des Morts, a platform game based on SDL2
   template     - Simple application template
   templaye_sdl - SDL-based application template

BUILD

   You need the arm-none-eabi toolchain available from
   https://launchpad.net/gcc-arm-embedded

   Compile with:

      make all

   Each folder has its own Makefile and can be compiled separately.

INSTALL

   The applications folders abbaye and template builds a kernel.img file that
   must be copied to an SD card along with the firmware files:

      bootcode.bin
      config.txt
      fixup_cd.dat
      fixup.dat
      start_cd.elf
      start.elf

   Firmware files can be downloaded from
   https://github.com/raspberrypi/firmware/tree/master/boot
